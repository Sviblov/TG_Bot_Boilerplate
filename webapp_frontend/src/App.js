// App.js
import { useEffect, useState } from "react";
import Homepage from "./pages/Homepage"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

function App() {
  const [user, setUser] = useState(null);
  const [isValid, setIsValid] = useState(false);
  const [loading, setLoading] = useState(true); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏

  useEffect(() => {
    const tg = window.Telegram.WebApp;
    const initData = tg.initData;
    const initDataUnsafe = tg.initDataUnsafe;

    const apiUrl = process.env.REACT_APP_API_URL + "/validate";

   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º initData –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    fetch(apiUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ init_data: initData })
    })
      .then(res => res.json())
      .then(data => {
        if (data.valid) {
          setIsValid(true);
          setUser(initDataUnsafe.user);
          localStorage.setItem("token", data.token);
        } else {
          setIsValid(false);
        }
      })
      .catch((error) => {
        console.error("–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", error);
        setIsValid(false);
      })
      .finally(() => {
        setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      });
   
   }, []);
 // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
  if (loading) return <div>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</div>;

 
  if (!isValid || !user) return <div>‚õî –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Telegram</div>;
   

  return <Homepage user={user} />;
}

export default App;