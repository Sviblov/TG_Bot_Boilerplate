import  { useEffect, useState } from "react";
import ValidatedApp from "./ValidatedApp";


// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


function WebAppValidator(){
  const [user, setUser] = useState<TelegramWebAppUser | null>(null); // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [isValid, setIsValid] = useState<boolean>(false); // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  const [loading, setLoading] = useState<boolean>(true); // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [initDataUnsafe, setInitDataUnsafe] = useState<any>(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è initDataUnsafe
  const [token, setToken] = useState<string | null>(null); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞
  

  useEffect(() => {
    const tg = window.Telegram.WebApp; // Telegram WebApp API
    const initData: string = tg.initData; // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º initData –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    const initDataUnsafe = tg.initDataUnsafe;

    const apiUrl = `${import.meta.env.VITE_APP_API_URL}/validate`; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º initData –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    fetch(apiUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ init_data: initData }),
    })
      .then((res) => res.json())
      .then((data) => {
        if (data.valid) {
          setIsValid(true);
          setUser(initDataUnsafe.user); 
          setInitDataUnsafe(initDataUnsafe); // –°–æ—Ö—Ä–∞–Ω—è–µ–º initDataUnsafe
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          setToken(data.token);
        } else {
          setIsValid(false);
        }
      })
      .catch(() => {
       
        setIsValid(false);
      })
      .finally(() => {
        setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      });
  }, []);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
  if (loading) return <div>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
  if (!isValid || !user) return <div>‚õî –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Telegram</div>;

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  return (
    <ValidatedApp initData={initDataUnsafe} token={token}/>
  );
}

export default WebAppValidator;