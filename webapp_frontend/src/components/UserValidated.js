import React, {useState, useEffect} from "react";

function UserGreeting({ user }) {

const [counter, setCounter] = useState(0);

const apiUrl = process.env.REACT_APP_API_URL + "/counter";

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å backend
  useEffect(() => {
    fetch(apiUrl+"/"+ user.id)
      .then((res) => res.json())
      .then((data) => {
        setCounter(data.counter); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ backend
      })
      .catch((error) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—á–µ—Ç—á–∏–∫–∞:", error);
      });
  }, [apiUrl]);

const increment = () => {
    const newCounter = counter + 1;
    setCounter(newCounter);
    updateCounterOnBackend(newCounter);
  };
const decrement = () => {
    const newCounter = counter - 1;
    setCounter(newCounter);
    updateCounterOnBackend(newCounter);
  };

const updateCounterOnBackend = (newCounter) => {
    fetch(apiUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        counter: newCounter,
        user_id: user.id,
      }),
    }).catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞:", error);
    });
  };

  return (
    <div>
      <h1>üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!</h1>
      <p>–¢—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Telegram Mini App.</p>
      <p>–°—á–µ—Ç—á–∏–∫: {counter}</p>
      <button onClick={increment}>–£–≤–µ–ª–∏—á–∏—Ç—å</button>
      <button onClick={decrement}>–£–º–µ–Ω—å—à–∏—Ç—å</button>
  
    </div>
  );
}

export default UserGreeting;